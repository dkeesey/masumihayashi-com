---
import Layout from './Layout.astro';
import ResponsiveImage from "../components/ResponsiveImage.astro";
import type { CollectionEntry } from 'astro:content';

interface Props {
  entry: CollectionEntry<'artwork'>;
  galleryPath: string;
}

const { entry, galleryPath } = Astro.props;
---

<Layout title={entry.data.title}>
  <!-- Back to Gallery Link and Content Toggle -->
  <div class="bg-black w-full pt-20 pb-4">
    <div class="max-w-7xl mx-auto px-4 flex justify-between items-center">
      <a
        href={galleryPath}
        class="inline-flex items-center gap-2 text-white/70 hover:text-white transition-colors text-sm"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="m15 18-6-6 6-6"/>
        </svg>
        Back to Gallery
      </a>
      <button
        id="toggleContent"
        class="inline-flex items-center gap-2 text-white/70 hover:text-white transition-colors text-sm px-3 py-1 rounded border border-white/20 hover:border-white/40"
      >
        <span id="toggleText">Hide Description</span>
      </button>
    </div>
  </div>

  <!-- Full-width image section with black background -->
  <section class="w-full bg-black py-8">
    <div class="max-w-7xl mx-auto px-4">
      <figure>
        <!-- Image container - full artwork display with native zoom -->
        <div class="flex items-center justify-center">
          <ResponsiveImage
            imageSlug={entry.data.imageSlug || entry.data.slug}
            alt={`Picture of ${entry.data.name} by Dr. Masumi Hayashi`}
            loading="eager"
            enableZoom={false}
            fullSize={true}
          />
        </div>
        <figcaption class="text-museum-white bg-black text-center mt-6 space-y-2">
          <p class="text-xl font-medium">{entry.data.name}</p>
          {(entry.data.city || entry.data.state || entry.data.country) && (
            <p class="text-base opacity-80">
              {[entry.data.city, entry.data.state, entry.data.country].filter(Boolean).join(', ')}
            </p>
          )}
          <p class="text-sm opacity-70">{entry.data.media}</p>
          <p class="text-sm opacity-70">{entry.data.year}</p>
          {entry.data.size && <p class="text-sm opacity-70">{entry.data.size}</p>}
        </figcaption>
      </figure>
    </div>
  </section>

  <!-- Artwork description/content -->
  <div id="artworkContent" class="bg-white w-full py-16">
    <div class="max-w-4xl mx-auto px-4 prose prose-lg">
      <slot />
    </div>
  </div>
</Layout>

<script define:vars={{ galleryPath }}>
  // Content toggle functionality
  const toggleButton = document.getElementById('toggleContent');
  const toggleText = document.getElementById('toggleText');
  const artworkContent = document.getElementById('artworkContent');
  let isContentVisible = true; // Default to showing content

  toggleButton?.addEventListener('click', () => {
    isContentVisible = !isContentVisible;
    if (artworkContent) {
      artworkContent.style.display = isContentVisible ? 'block' : 'none';
    }
    if (toggleText) {
      toggleText.textContent = isContentVisible ? 'Hide Description' : 'Show Description';
    }
  });

  // Swipe right to return to gallery
  let touchStartX = 0;
  let touchEndX = 0;
  const swipeThreshold = 100;

  document.addEventListener('touchstart', (e) => {
    touchStartX = e.changedTouches[0].screenX;
  }, { passive: true });

  document.addEventListener('touchend', (e) => {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  }, { passive: true });

  function handleSwipe() {
    const swipeDistance = touchEndX - touchStartX;

    // Swipe right = return to gallery
    if (swipeDistance > swipeThreshold) {
      window.location.href = galleryPath;
    }
  }
</script>
